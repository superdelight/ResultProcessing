//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PortalAdminAPI.AdminService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchoolDTO", Namespace="http://schemas.datacontract.org/2004/07/RS.DataContract")]
    [System.SerializableAttribute()]
    public partial class SchoolDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchoolNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchoolName {
            get {
                return this.SchoolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SchoolNameField, value) != true)) {
                    this.SchoolNameField = value;
                    this.RaisePropertyChanged("SchoolName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessBase", Namespace="http://schemas.datacontract.org/2004/07/ResultBusinessLogic.Utility")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PortalAdminAPI.AdminService.BusinessMessageOfboolean))]
    public partial class BusinessBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PortalAdminAPI.AdminService.ResponseCode ResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PortalAdminAPI.AdminService.ResponseCode Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((this.ResponseField.Equals(value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/ResultBusinessLogic.Utility")]
    [System.SerializableAttribute()]
    public partial class BusinessMessageOfboolean : PortalAdminAPI.AdminService.BusinessBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseCode", Namespace="http://schemas.datacontract.org/2004/07/ResultBusinessLogic.Utility")]
    public enum ResponseCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotOk = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacultyDTO", Namespace="http://schemas.datacontract.org/2004/07/RS.DataContract")]
    [System.SerializableAttribute()]
    public partial class FacultyDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacAcronymsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SchoolIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacAcronyms {
            get {
                return this.FacAcronymsField;
            }
            set {
                if ((object.ReferenceEquals(this.FacAcronymsField, value) != true)) {
                    this.FacAcronymsField = value;
                    this.RaisePropertyChanged("FacAcronyms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacName {
            get {
                return this.FacNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacNameField, value) != true)) {
                    this.FacNameField = value;
                    this.RaisePropertyChanged("FacName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SchoolId {
            get {
                return this.SchoolIdField;
            }
            set {
                if ((this.SchoolIdField.Equals(value) != true)) {
                    this.SchoolIdField = value;
                    this.RaisePropertyChanged("SchoolId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentDTO", Namespace="http://schemas.datacontract.org/2004/07/RS.DataContract")]
    [System.SerializableAttribute()]
    public partial class DepartmentDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeptCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeptFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FacIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsVisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeptCode {
            get {
                return this.DeptCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeptCodeField, value) != true)) {
                    this.DeptCodeField = value;
                    this.RaisePropertyChanged("DeptCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeptFullName {
            get {
                return this.DeptFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeptFullNameField, value) != true)) {
                    this.DeptFullNameField = value;
                    this.RaisePropertyChanged("DeptFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FacId {
            get {
                return this.FacIdField;
            }
            set {
                if ((this.FacIdField.Equals(value) != true)) {
                    this.FacIdField = value;
                    this.RaisePropertyChanged("FacId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProgrammeDTO", Namespace="http://schemas.datacontract.org/2004/07/RS.DataContract")]
    [System.SerializableAttribute()]
    public partial class ProgrammeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ExpectedGraduationYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgrammeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgrammeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> deptIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ExpectedGraduationYear {
            get {
                return this.ExpectedGraduationYearField;
            }
            set {
                if ((this.ExpectedGraduationYearField.Equals(value) != true)) {
                    this.ExpectedGraduationYearField = value;
                    this.RaisePropertyChanged("ExpectedGraduationYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgrammeCode {
            get {
                return this.ProgrammeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgrammeCodeField, value) != true)) {
                    this.ProgrammeCodeField = value;
                    this.RaisePropertyChanged("ProgrammeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgrammeDescription {
            get {
                return this.ProgrammeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgrammeDescriptionField, value) != true)) {
                    this.ProgrammeDescriptionField = value;
                    this.RaisePropertyChanged("ProgrammeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> deptId {
            get {
                return this.deptIdField;
            }
            set {
                if ((this.deptIdField.Equals(value) != true)) {
                    this.deptIdField = value;
                    this.RaisePropertyChanged("deptId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AwardDTO", Namespace="http://schemas.datacontract.org/2004/07/RS.DataContract")]
    [System.SerializableAttribute()]
    public partial class AwardDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AwardAcronymsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AwardNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AwardAcronyms {
            get {
                return this.AwardAcronymsField;
            }
            set {
                if ((object.ReferenceEquals(this.AwardAcronymsField, value) != true)) {
                    this.AwardAcronymsField = value;
                    this.RaisePropertyChanged("AwardAcronyms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AwardName {
            get {
                return this.AwardNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AwardNameField, value) != true)) {
                    this.AwardNameField = value;
                    this.RaisePropertyChanged("AwardName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoZoneDTO", Namespace="http://schemas.datacontract.org/2004/07/RS.DataContract")]
    [System.SerializableAttribute()]
    public partial class GeoZoneDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateDTO", Namespace="http://schemas.datacontract.org/2004/07/RS.DataContract")]
    [System.SerializableAttribute()]
    public partial class StateDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GeoZoneIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GeoZoneId {
            get {
                return this.GeoZoneIdField;
            }
            set {
                if ((this.GeoZoneIdField.Equals(value) != true)) {
                    this.GeoZoneIdField = value;
                    this.RaisePropertyChanged("GeoZoneId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityDTO", Namespace="http://schemas.datacontract.org/2004/07/RS.DataContract")]
    [System.SerializableAttribute()]
    public partial class CityDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateId {
            get {
                return this.StateIdField;
            }
            set {
                if ((this.StateIdField.Equals(value) != true)) {
                    this.StateIdField = value;
                    this.RaisePropertyChanged("StateId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CentreDTO", Namespace="http://schemas.datacontract.org/2004/07/RS.DataContract")]
    [System.SerializableAttribute()]
    public partial class CentreDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CentreCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CentrePictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SchoolIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CentreCode {
            get {
                return this.CentreCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CentreCodeField, value) != true)) {
                    this.CentreCodeField = value;
                    this.RaisePropertyChanged("CentreCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CentrePicture {
            get {
                return this.CentrePictureField;
            }
            set {
                if ((object.ReferenceEquals(this.CentrePictureField, value) != true)) {
                    this.CentrePictureField = value;
                    this.RaisePropertyChanged("CentrePicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((this.CityIdField.Equals(value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SchoolId {
            get {
                return this.SchoolIdField;
            }
            set {
                if ((this.SchoolIdField.Equals(value) != true)) {
                    this.SchoolIdField = value;
                    this.RaisePropertyChanged("SchoolId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AwardLevelDTO", Namespace="http://schemas.datacontract.org/2004/07/RS.DataContract")]
    [System.SerializableAttribute()]
    public partial class AwardLevelDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AwardIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AwardId {
            get {
                return this.AwardIdField;
            }
            set {
                if ((this.AwardIdField.Equals(value) != true)) {
                    this.AwardIdField = value;
                    this.RaisePropertyChanged("AwardId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LevelId {
            get {
                return this.LevelIdField;
            }
            set {
                if ((this.LevelIdField.Equals(value) != true)) {
                    this.LevelIdField = value;
                    this.RaisePropertyChanged("LevelId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequirementDTO", Namespace="http://schemas.datacontract.org/2004/07/RS.DataContract")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PortalAdminAPI.AdminService.FacultyReqDTO))]
    public partial class RequirementDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AwardLevelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsElectiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaximumUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinimumUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SemesterIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AwardLevelId {
            get {
                return this.AwardLevelIdField;
            }
            set {
                if ((this.AwardLevelIdField.Equals(value) != true)) {
                    this.AwardLevelIdField = value;
                    this.RaisePropertyChanged("AwardLevelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsElective {
            get {
                return this.IsElectiveField;
            }
            set {
                if ((this.IsElectiveField.Equals(value) != true)) {
                    this.IsElectiveField = value;
                    this.RaisePropertyChanged("IsElective");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumUnit {
            get {
                return this.MaximumUnitField;
            }
            set {
                if ((this.MaximumUnitField.Equals(value) != true)) {
                    this.MaximumUnitField = value;
                    this.RaisePropertyChanged("MaximumUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinimumUnit {
            get {
                return this.MinimumUnitField;
            }
            set {
                if ((this.MinimumUnitField.Equals(value) != true)) {
                    this.MinimumUnitField = value;
                    this.RaisePropertyChanged("MinimumUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SemesterId {
            get {
                return this.SemesterIdField;
            }
            set {
                if ((this.SemesterIdField.Equals(value) != true)) {
                    this.SemesterIdField = value;
                    this.RaisePropertyChanged("SemesterId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacultyReqDTO", Namespace="http://schemas.datacontract.org/2004/07/RS.DataContract")]
    [System.SerializableAttribute()]
    public partial class FacultyReqDTO : PortalAdminAPI.AdminService.RequirementDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacultyIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacultyId {
            get {
                return this.FacultyIdField;
            }
            set {
                if ((this.FacultyIdField.Equals(value) != true)) {
                    this.FacultyIdField = value;
                    this.RaisePropertyChanged("FacultyId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminService.IPortalAdminService")]
    public interface IPortalAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetDefaultSchool", ReplyAction="http://tempuri.org/IPortalAdminService/GetDefaultSchoolResponse")]
        PortalAdminAPI.AdminService.SchoolDTO GetDefaultSchool();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetDefaultSchool", ReplyAction="http://tempuri.org/IPortalAdminService/GetDefaultSchoolResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.SchoolDTO> GetDefaultSchoolAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateSchool", ReplyAction="http://tempuri.org/IPortalAdminService/CreateSchoolResponse")]
        PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateSchool(PortalAdminAPI.AdminService.SchoolDTO school);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateSchool", ReplyAction="http://tempuri.org/IPortalAdminService/CreateSchoolResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateSchoolAsync(PortalAdminAPI.AdminService.SchoolDTO school);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateFaculty", ReplyAction="http://tempuri.org/IPortalAdminService/CreateFacultyResponse")]
        PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateFaculty(PortalAdminAPI.AdminService.FacultyDTO faculty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateFaculty", ReplyAction="http://tempuri.org/IPortalAdminService/CreateFacultyResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateFacultyAsync(PortalAdminAPI.AdminService.FacultyDTO faculty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllFaculties", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllFacultiesResponse")]
        PortalAdminAPI.AdminService.FacultyDTO[] GetAllFaculties();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllFaculties", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllFacultiesResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyDTO[]> GetAllFacultiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllDepartmentsinFAC", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllDepartmentsinFACResponse")]
        PortalAdminAPI.AdminService.DepartmentDTO[] GetAllDepartmentsinFAC(int facId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllDepartmentsinFAC", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllDepartmentsinFACResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.DepartmentDTO[]> GetAllDepartmentsinFACAsync(int facId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateDepartment", ReplyAction="http://tempuri.org/IPortalAdminService/CreateDepartmentResponse")]
        PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateDepartment(PortalAdminAPI.AdminService.DepartmentDTO dept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateDepartment", ReplyAction="http://tempuri.org/IPortalAdminService/CreateDepartmentResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateDepartmentAsync(PortalAdminAPI.AdminService.DepartmentDTO dept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateNewProgramme", ReplyAction="http://tempuri.org/IPortalAdminService/CreateNewProgrammeResponse")]
        PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateNewProgramme(PortalAdminAPI.AdminService.ProgrammeDTO progr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateNewProgramme", ReplyAction="http://tempuri.org/IPortalAdminService/CreateNewProgrammeResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateNewProgrammeAsync(PortalAdminAPI.AdminService.ProgrammeDTO progr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllDepartments", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllDepartmentsResponse")]
        PortalAdminAPI.AdminService.DepartmentDTO[] GetAllDepartments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllDepartments", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllDepartmentsResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.DepartmentDTO[]> GetAllDepartmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetProgrammesInDepartment", ReplyAction="http://tempuri.org/IPortalAdminService/GetProgrammesInDepartmentResponse")]
        PortalAdminAPI.AdminService.ProgrammeDTO[] GetProgrammesInDepartment(int deptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetProgrammesInDepartment", ReplyAction="http://tempuri.org/IPortalAdminService/GetProgrammesInDepartmentResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.ProgrammeDTO[]> GetProgrammesInDepartmentAsync(int deptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetProgrammesInFaculty", ReplyAction="http://tempuri.org/IPortalAdminService/GetProgrammesInFacultyResponse")]
        PortalAdminAPI.AdminService.ProgrammeDTO[] GetProgrammesInFaculty(int facId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetProgrammesInFaculty", ReplyAction="http://tempuri.org/IPortalAdminService/GetProgrammesInFacultyResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.ProgrammeDTO[]> GetProgrammesInFacultyAsync(int facId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateNewAward", ReplyAction="http://tempuri.org/IPortalAdminService/CreateNewAwardResponse")]
        PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateNewAward(PortalAdminAPI.AdminService.AwardDTO award);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateNewAward", ReplyAction="http://tempuri.org/IPortalAdminService/CreateNewAwardResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateNewAwardAsync(PortalAdminAPI.AdminService.AwardDTO award);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllAwards", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllAwardsResponse")]
        PortalAdminAPI.AdminService.AwardDTO[] GetAllAwards();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllAwards", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllAwardsResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.AwardDTO[]> GetAllAwardsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAward", ReplyAction="http://tempuri.org/IPortalAdminService/GetAwardResponse")]
        PortalAdminAPI.AdminService.AwardDTO GetAward(string acronyms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAward", ReplyAction="http://tempuri.org/IPortalAdminService/GetAwardResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.AwardDTO> GetAwardAsync(string acronyms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateNewZone", ReplyAction="http://tempuri.org/IPortalAdminService/CreateNewZoneResponse")]
        PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateNewZone(PortalAdminAPI.AdminService.GeoZoneDTO zone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateNewZone", ReplyAction="http://tempuri.org/IPortalAdminService/CreateNewZoneResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateNewZoneAsync(PortalAdminAPI.AdminService.GeoZoneDTO zone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllZones", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllZonesResponse")]
        PortalAdminAPI.AdminService.GeoZoneDTO[] GetAllZones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllZones", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllZonesResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.GeoZoneDTO[]> GetAllZonesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetZone", ReplyAction="http://tempuri.org/IPortalAdminService/GetZoneResponse")]
        PortalAdminAPI.AdminService.GeoZoneDTO GetZone(string des);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetZone", ReplyAction="http://tempuri.org/IPortalAdminService/GetZoneResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.GeoZoneDTO> GetZoneAsync(string des);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateNewState", ReplyAction="http://tempuri.org/IPortalAdminService/CreateNewStateResponse")]
        PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateNewState(PortalAdminAPI.AdminService.StateDTO state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateNewState", ReplyAction="http://tempuri.org/IPortalAdminService/CreateNewStateResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateNewStateAsync(PortalAdminAPI.AdminService.StateDTO state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllStates", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllStatesResponse")]
        PortalAdminAPI.AdminService.StateDTO[] GetAllStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllStates", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllStatesResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.StateDTO[]> GetAllStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetState", ReplyAction="http://tempuri.org/IPortalAdminService/GetStateResponse")]
        PortalAdminAPI.AdminService.StateDTO GetState(string des);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetState", ReplyAction="http://tempuri.org/IPortalAdminService/GetStateResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.StateDTO> GetStateAsync(string des);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateNewCity", ReplyAction="http://tempuri.org/IPortalAdminService/CreateNewCityResponse")]
        PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateNewCity(PortalAdminAPI.AdminService.CityDTO city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateNewCity", ReplyAction="http://tempuri.org/IPortalAdminService/CreateNewCityResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateNewCityAsync(PortalAdminAPI.AdminService.CityDTO city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllCities", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllCitiesResponse")]
        PortalAdminAPI.AdminService.CityDTO[] GetAllCities(int stateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllCities", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllCitiesResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.CityDTO[]> GetAllCitiesAsync(int stateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetCity", ReplyAction="http://tempuri.org/IPortalAdminService/GetCityResponse")]
        PortalAdminAPI.AdminService.CityDTO GetCity(string des);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetCity", ReplyAction="http://tempuri.org/IPortalAdminService/GetCityResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.CityDTO> GetCityAsync(string des);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateNewCentre", ReplyAction="http://tempuri.org/IPortalAdminService/CreateNewCentreResponse")]
        PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateNewCentre(PortalAdminAPI.AdminService.CentreDTO centre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateNewCentre", ReplyAction="http://tempuri.org/IPortalAdminService/CreateNewCentreResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateNewCentreAsync(PortalAdminAPI.AdminService.CentreDTO centre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllCentresinCity", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllCentresinCityResponse")]
        PortalAdminAPI.AdminService.CentreDTO[] GetAllCentresinCity(int cityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllCentresinCity", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllCentresinCityResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.CentreDTO[]> GetAllCentresinCityAsync(int cityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllCentresinState", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllCentresinStateResponse")]
        PortalAdminAPI.AdminService.CentreDTO[] GetAllCentresinState(int stateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllCentresinState", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllCentresinStateResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.CentreDTO[]> GetAllCentresinStateAsync(int stateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetCentre", ReplyAction="http://tempuri.org/IPortalAdminService/GetCentreResponse")]
        PortalAdminAPI.AdminService.CentreDTO GetCentre(string des);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetCentre", ReplyAction="http://tempuri.org/IPortalAdminService/GetCentreResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.CentreDTO> GetCentreAsync(string des);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateAwardLevel", ReplyAction="http://tempuri.org/IPortalAdminService/CreateAwardLevelResponse")]
        PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateAwardLevel(PortalAdminAPI.AdminService.AwardLevelDTO awrdLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateAwardLevel", ReplyAction="http://tempuri.org/IPortalAdminService/CreateAwardLevelResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateAwardLevelAsync(PortalAdminAPI.AdminService.AwardLevelDTO awrdLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllAwardLevel", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllAwardLevelResponse")]
        PortalAdminAPI.AdminService.AwardLevelDTO[] GetAllAwardLevel();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllAwardLevel", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllAwardLevelResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.AwardLevelDTO[]> GetAllAwardLevelAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAwardLevel", ReplyAction="http://tempuri.org/IPortalAdminService/GetAwardLevelResponse")]
        PortalAdminAPI.AdminService.AwardLevelDTO GetAwardLevel(int awrdId, int levId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAwardLevel", ReplyAction="http://tempuri.org/IPortalAdminService/GetAwardLevelResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.AwardLevelDTO> GetAwardLevelAsync(int awrdId, int levId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateFacRequirement", ReplyAction="http://tempuri.org/IPortalAdminService/CreateFacRequirementResponse")]
        PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateFacRequirement(PortalAdminAPI.AdminService.FacultyReqDTO facReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/CreateFacRequirement", ReplyAction="http://tempuri.org/IPortalAdminService/CreateFacRequirementResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateFacRequirementAsync(PortalAdminAPI.AdminService.FacultyReqDTO facReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetFacRequirement", ReplyAction="http://tempuri.org/IPortalAdminService/GetFacRequirementResponse")]
        PortalAdminAPI.AdminService.FacultyReqDTO GetFacRequirement(int awrdId, int semId, int facId, System.Nullable<bool> IsElective);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetFacRequirement", ReplyAction="http://tempuri.org/IPortalAdminService/GetFacRequirementResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyReqDTO> GetFacRequirementAsync(int awrdId, int semId, int facId, System.Nullable<bool> IsElective);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllFacultyReq", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllFacultyReqResponse")]
        PortalAdminAPI.AdminService.FacultyReqDTO[] GetAllFacultyReq(int awrdLevId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllFacultyReq", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllFacultyReqResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyReqDTO[]> GetAllFacultyReqAsync(int awrdLevId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllFacReqInSemester", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllFacReqInSemesterResponse")]
        PortalAdminAPI.AdminService.FacultyReqDTO[] GetAllFacReqInSemester(int semId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllFacReqInSemester", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllFacReqInSemesterResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyReqDTO[]> GetAllFacReqInSemesterAsync(int semId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllFacultyReqInFac", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllFacultyReqInFacResponse")]
        PortalAdminAPI.AdminService.FacultyReqDTO[] GetAllFacultyReqInFac(int facId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllFacultyReqInFac", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllFacultyReqInFacResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyReqDTO[]> GetAllFacultyReqInFacAsync(int facId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllFacReq", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllFacReqResponse")]
        PortalAdminAPI.AdminService.FacultyReqDTO[] GetAllFacReq(int awrdLevId, int facId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllFacReq", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllFacReqResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyReqDTO[]> GetAllFacReqAsync(int awrdLevId, int facId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllFacReqInSemesterFaq", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllFacReqInSemesterFaqResponse")]
        PortalAdminAPI.AdminService.FacultyReqDTO[] GetAllFacReqInSemesterFaq(int semId, int facId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllFacReqInSemesterFaq", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllFacReqInSemesterFaqResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyReqDTO[]> GetAllFacReqInSemesterFaqAsync(int semId, int facId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllFacReqInFaculty", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllFacReqInFacultyResponse")]
        PortalAdminAPI.AdminService.FacultyReqDTO[] GetAllFacReqInFaculty(int facId, System.Nullable<bool> IsElective);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalAdminService/GetAllFacReqInFaculty", ReplyAction="http://tempuri.org/IPortalAdminService/GetAllFacReqInFacultyResponse")]
        System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyReqDTO[]> GetAllFacReqInFacultyAsync(int facId, System.Nullable<bool> IsElective);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPortalAdminServiceChannel : PortalAdminAPI.AdminService.IPortalAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PortalAdminServiceClient : System.ServiceModel.ClientBase<PortalAdminAPI.AdminService.IPortalAdminService>, PortalAdminAPI.AdminService.IPortalAdminService {
        
        public PortalAdminServiceClient() {
        }
        
        public PortalAdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PortalAdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PortalAdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PortalAdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PortalAdminAPI.AdminService.SchoolDTO GetDefaultSchool() {
            return base.Channel.GetDefaultSchool();
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.SchoolDTO> GetDefaultSchoolAsync() {
            return base.Channel.GetDefaultSchoolAsync();
        }
        
        public PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateSchool(PortalAdminAPI.AdminService.SchoolDTO school) {
            return base.Channel.CreateSchool(school);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateSchoolAsync(PortalAdminAPI.AdminService.SchoolDTO school) {
            return base.Channel.CreateSchoolAsync(school);
        }
        
        public PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateFaculty(PortalAdminAPI.AdminService.FacultyDTO faculty) {
            return base.Channel.CreateFaculty(faculty);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateFacultyAsync(PortalAdminAPI.AdminService.FacultyDTO faculty) {
            return base.Channel.CreateFacultyAsync(faculty);
        }
        
        public PortalAdminAPI.AdminService.FacultyDTO[] GetAllFaculties() {
            return base.Channel.GetAllFaculties();
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyDTO[]> GetAllFacultiesAsync() {
            return base.Channel.GetAllFacultiesAsync();
        }
        
        public PortalAdminAPI.AdminService.DepartmentDTO[] GetAllDepartmentsinFAC(int facId) {
            return base.Channel.GetAllDepartmentsinFAC(facId);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.DepartmentDTO[]> GetAllDepartmentsinFACAsync(int facId) {
            return base.Channel.GetAllDepartmentsinFACAsync(facId);
        }
        
        public PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateDepartment(PortalAdminAPI.AdminService.DepartmentDTO dept) {
            return base.Channel.CreateDepartment(dept);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateDepartmentAsync(PortalAdminAPI.AdminService.DepartmentDTO dept) {
            return base.Channel.CreateDepartmentAsync(dept);
        }
        
        public PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateNewProgramme(PortalAdminAPI.AdminService.ProgrammeDTO progr) {
            return base.Channel.CreateNewProgramme(progr);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateNewProgrammeAsync(PortalAdminAPI.AdminService.ProgrammeDTO progr) {
            return base.Channel.CreateNewProgrammeAsync(progr);
        }
        
        public PortalAdminAPI.AdminService.DepartmentDTO[] GetAllDepartments() {
            return base.Channel.GetAllDepartments();
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.DepartmentDTO[]> GetAllDepartmentsAsync() {
            return base.Channel.GetAllDepartmentsAsync();
        }
        
        public PortalAdminAPI.AdminService.ProgrammeDTO[] GetProgrammesInDepartment(int deptId) {
            return base.Channel.GetProgrammesInDepartment(deptId);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.ProgrammeDTO[]> GetProgrammesInDepartmentAsync(int deptId) {
            return base.Channel.GetProgrammesInDepartmentAsync(deptId);
        }
        
        public PortalAdminAPI.AdminService.ProgrammeDTO[] GetProgrammesInFaculty(int facId) {
            return base.Channel.GetProgrammesInFaculty(facId);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.ProgrammeDTO[]> GetProgrammesInFacultyAsync(int facId) {
            return base.Channel.GetProgrammesInFacultyAsync(facId);
        }
        
        public PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateNewAward(PortalAdminAPI.AdminService.AwardDTO award) {
            return base.Channel.CreateNewAward(award);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateNewAwardAsync(PortalAdminAPI.AdminService.AwardDTO award) {
            return base.Channel.CreateNewAwardAsync(award);
        }
        
        public PortalAdminAPI.AdminService.AwardDTO[] GetAllAwards() {
            return base.Channel.GetAllAwards();
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.AwardDTO[]> GetAllAwardsAsync() {
            return base.Channel.GetAllAwardsAsync();
        }
        
        public PortalAdminAPI.AdminService.AwardDTO GetAward(string acronyms) {
            return base.Channel.GetAward(acronyms);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.AwardDTO> GetAwardAsync(string acronyms) {
            return base.Channel.GetAwardAsync(acronyms);
        }
        
        public PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateNewZone(PortalAdminAPI.AdminService.GeoZoneDTO zone) {
            return base.Channel.CreateNewZone(zone);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateNewZoneAsync(PortalAdminAPI.AdminService.GeoZoneDTO zone) {
            return base.Channel.CreateNewZoneAsync(zone);
        }
        
        public PortalAdminAPI.AdminService.GeoZoneDTO[] GetAllZones() {
            return base.Channel.GetAllZones();
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.GeoZoneDTO[]> GetAllZonesAsync() {
            return base.Channel.GetAllZonesAsync();
        }
        
        public PortalAdminAPI.AdminService.GeoZoneDTO GetZone(string des) {
            return base.Channel.GetZone(des);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.GeoZoneDTO> GetZoneAsync(string des) {
            return base.Channel.GetZoneAsync(des);
        }
        
        public PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateNewState(PortalAdminAPI.AdminService.StateDTO state) {
            return base.Channel.CreateNewState(state);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateNewStateAsync(PortalAdminAPI.AdminService.StateDTO state) {
            return base.Channel.CreateNewStateAsync(state);
        }
        
        public PortalAdminAPI.AdminService.StateDTO[] GetAllStates() {
            return base.Channel.GetAllStates();
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.StateDTO[]> GetAllStatesAsync() {
            return base.Channel.GetAllStatesAsync();
        }
        
        public PortalAdminAPI.AdminService.StateDTO GetState(string des) {
            return base.Channel.GetState(des);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.StateDTO> GetStateAsync(string des) {
            return base.Channel.GetStateAsync(des);
        }
        
        public PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateNewCity(PortalAdminAPI.AdminService.CityDTO city) {
            return base.Channel.CreateNewCity(city);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateNewCityAsync(PortalAdminAPI.AdminService.CityDTO city) {
            return base.Channel.CreateNewCityAsync(city);
        }
        
        public PortalAdminAPI.AdminService.CityDTO[] GetAllCities(int stateId) {
            return base.Channel.GetAllCities(stateId);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.CityDTO[]> GetAllCitiesAsync(int stateId) {
            return base.Channel.GetAllCitiesAsync(stateId);
        }
        
        public PortalAdminAPI.AdminService.CityDTO GetCity(string des) {
            return base.Channel.GetCity(des);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.CityDTO> GetCityAsync(string des) {
            return base.Channel.GetCityAsync(des);
        }
        
        public PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateNewCentre(PortalAdminAPI.AdminService.CentreDTO centre) {
            return base.Channel.CreateNewCentre(centre);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateNewCentreAsync(PortalAdminAPI.AdminService.CentreDTO centre) {
            return base.Channel.CreateNewCentreAsync(centre);
        }
        
        public PortalAdminAPI.AdminService.CentreDTO[] GetAllCentresinCity(int cityId) {
            return base.Channel.GetAllCentresinCity(cityId);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.CentreDTO[]> GetAllCentresinCityAsync(int cityId) {
            return base.Channel.GetAllCentresinCityAsync(cityId);
        }
        
        public PortalAdminAPI.AdminService.CentreDTO[] GetAllCentresinState(int stateId) {
            return base.Channel.GetAllCentresinState(stateId);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.CentreDTO[]> GetAllCentresinStateAsync(int stateId) {
            return base.Channel.GetAllCentresinStateAsync(stateId);
        }
        
        public PortalAdminAPI.AdminService.CentreDTO GetCentre(string des) {
            return base.Channel.GetCentre(des);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.CentreDTO> GetCentreAsync(string des) {
            return base.Channel.GetCentreAsync(des);
        }
        
        public PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateAwardLevel(PortalAdminAPI.AdminService.AwardLevelDTO awrdLevel) {
            return base.Channel.CreateAwardLevel(awrdLevel);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateAwardLevelAsync(PortalAdminAPI.AdminService.AwardLevelDTO awrdLevel) {
            return base.Channel.CreateAwardLevelAsync(awrdLevel);
        }
        
        public PortalAdminAPI.AdminService.AwardLevelDTO[] GetAllAwardLevel() {
            return base.Channel.GetAllAwardLevel();
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.AwardLevelDTO[]> GetAllAwardLevelAsync() {
            return base.Channel.GetAllAwardLevelAsync();
        }
        
        public PortalAdminAPI.AdminService.AwardLevelDTO GetAwardLevel(int awrdId, int levId) {
            return base.Channel.GetAwardLevel(awrdId, levId);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.AwardLevelDTO> GetAwardLevelAsync(int awrdId, int levId) {
            return base.Channel.GetAwardLevelAsync(awrdId, levId);
        }
        
        public PortalAdminAPI.AdminService.BusinessMessageOfboolean CreateFacRequirement(PortalAdminAPI.AdminService.FacultyReqDTO facReq) {
            return base.Channel.CreateFacRequirement(facReq);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.BusinessMessageOfboolean> CreateFacRequirementAsync(PortalAdminAPI.AdminService.FacultyReqDTO facReq) {
            return base.Channel.CreateFacRequirementAsync(facReq);
        }
        
        public PortalAdminAPI.AdminService.FacultyReqDTO GetFacRequirement(int awrdId, int semId, int facId, System.Nullable<bool> IsElective) {
            return base.Channel.GetFacRequirement(awrdId, semId, facId, IsElective);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyReqDTO> GetFacRequirementAsync(int awrdId, int semId, int facId, System.Nullable<bool> IsElective) {
            return base.Channel.GetFacRequirementAsync(awrdId, semId, facId, IsElective);
        }
        
        public PortalAdminAPI.AdminService.FacultyReqDTO[] GetAllFacultyReq(int awrdLevId) {
            return base.Channel.GetAllFacultyReq(awrdLevId);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyReqDTO[]> GetAllFacultyReqAsync(int awrdLevId) {
            return base.Channel.GetAllFacultyReqAsync(awrdLevId);
        }
        
        public PortalAdminAPI.AdminService.FacultyReqDTO[] GetAllFacReqInSemester(int semId) {
            return base.Channel.GetAllFacReqInSemester(semId);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyReqDTO[]> GetAllFacReqInSemesterAsync(int semId) {
            return base.Channel.GetAllFacReqInSemesterAsync(semId);
        }
        
        public PortalAdminAPI.AdminService.FacultyReqDTO[] GetAllFacultyReqInFac(int facId) {
            return base.Channel.GetAllFacultyReqInFac(facId);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyReqDTO[]> GetAllFacultyReqInFacAsync(int facId) {
            return base.Channel.GetAllFacultyReqInFacAsync(facId);
        }
        
        public PortalAdminAPI.AdminService.FacultyReqDTO[] GetAllFacReq(int awrdLevId, int facId) {
            return base.Channel.GetAllFacReq(awrdLevId, facId);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyReqDTO[]> GetAllFacReqAsync(int awrdLevId, int facId) {
            return base.Channel.GetAllFacReqAsync(awrdLevId, facId);
        }
        
        public PortalAdminAPI.AdminService.FacultyReqDTO[] GetAllFacReqInSemesterFaq(int semId, int facId) {
            return base.Channel.GetAllFacReqInSemesterFaq(semId, facId);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyReqDTO[]> GetAllFacReqInSemesterFaqAsync(int semId, int facId) {
            return base.Channel.GetAllFacReqInSemesterFaqAsync(semId, facId);
        }
        
        public PortalAdminAPI.AdminService.FacultyReqDTO[] GetAllFacReqInFaculty(int facId, System.Nullable<bool> IsElective) {
            return base.Channel.GetAllFacReqInFaculty(facId, IsElective);
        }
        
        public System.Threading.Tasks.Task<PortalAdminAPI.AdminService.FacultyReqDTO[]> GetAllFacReqInFacultyAsync(int facId, System.Nullable<bool> IsElective) {
            return base.Channel.GetAllFacReqInFacultyAsync(facId, IsElective);
        }
    }
}
